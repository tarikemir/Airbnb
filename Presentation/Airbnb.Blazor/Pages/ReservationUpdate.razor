<!-- ReservationUpdate.razor -->
@page "/reservations/update/{reservationId:int}"
@using Airbnb.Blazor.Interfaces;
@using Airbnb.Domain.Entities
@inject IReservationApiService ReservationApiService
@inject NavigationManager NavigationManager

<h3>Edit Reservation</h3>

@if (reservation == null)
{
    <p>Loading...</p>
}
else
{
    <form>
        <div class="form-group">
            <label for="renter_id">Renter ID:</label>
            <input type="text" class="form-control" id="renter_id" @bind="reservation.renter_id" />
        </div>
        <div class="form-group">
            <label for="start_date">Start Date:</label>
            <input type="text" class="form-control" id="start_date" @bind="reservation.start_date" />
        </div>
        <div class="form-group">
            <label for="end_date">End Date:</label>
            <input type="text" class="form-control" id="end_date" @bind="reservation.end_date" />
        </div>
        <div class="form-group">
            <label for="room_id">Room ID:</label>
            <input type="text" class="form-control" id="room_id" @bind="reservation.room_id" />
        </div>
        <div class="form-group">
            <label for="total">Total:</label>
            <input type="text" class="form-control" id="total" @bind="reservation.total" />
        </div>
        <div class="form-group">
            <label for="unit_price">Unit Price:</label>
            <input type="text" class="form-control" id="unit_price" @bind="reservation.unit_price" />
        </div>
        <div class="form-group">
            <label for="owner_id">Owner ID:</label>
            <input type="text" class="form-control" id="owner_id" @bind="reservation.owner_id" />
        </div>

        <button type="button" class="btn btn-primary" @onclick="UpdateReservation">Update</button>
    </form>
}

@code {
    [Parameter]
    public int reservationId { get; set; }

    private Reservation reservation;

    protected override async Task OnInitializedAsync()
    {
        reservation = await ReservationApiService.GetReservationById(reservationId);
    }

    private async Task UpdateReservation()
    {
        await ReservationApiService.UpdateReservation(reservation);
        NavigationManager.NavigateTo("/reservations"); // Navigate back to the reservation list page after updating
    }
}
